name: Update Dependencies

on: workflow_dispatch

env:
  # Use docker.io for Docker Hub if empty
  NXLOG_FILE_DOWNLOAD: https://nxlog.co/system/files/products/files/348/nxlog-ce-3.0.2272.msi
  NXLOG_SAVE_LOCATION: nxlog.msi
  NXLOG_SAVE_LOCATION_TEMP: nxlog-tmp.msi
  SYSMON_FILE_DOWNLOAD: https://download.sysinternals.com/files/Sysmon.zip
  SYSMON_SAVE_LOCATION: sysmon.zip
  SYSMON_SAVE_LOCATION_TEMP: sysmon-tmp.zip

jobs:
  download:
    name: Update
    runs-on: 'ubuntu-latest' # 'windows-latest' # [self-hosted, linux]

    outputs:
      GitBranchHash: ${{ steps.nxlog.outputs.GitBranchHash }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Check for NxLog Update
        id: nxlog
        run: |
          wget ${{ env.NXLOG_FILE_DOWNLOAD }} -O ${{ env.NXLOG_SAVE_LOCATION_TEMP }}
          NxLogExisting=$(md5sum ${{ env.NXLOG_SAVE_LOCATION }} | cut -f1 -d' ')
          NxLogNew=$(md5sum ${{ env.NXLOG_SAVE_LOCATION_TEMP }} | cut -f1 -d' ')
          echo "NxLogExisting is set to: $NxLogExisting"
          echo "NxLogNew is set to: $NxLogNew"
          if [[ ! $NxLogExisting = $NxLogNew ]]; then echo "Updating NxLog"; mv ${{ env.NXLOG_SAVE_LOCATION_TEMP }} ${{ env.NXLOG_SAVE_LOCATION }}; echo "::set-output name=GitBranchHash::${NxLogNew:0:8}"; else echo "No update, removing temporary file"; rm -f ${{ env.NXLOG_SAVE_LOCATION_TEMP }}; fi

      - name: Check for Sysmon Update
        run: |
          wget ${{ env.SYSMON_FILE_DOWNLOAD }} -O ${{ env.SYSMON_SAVE_LOCATION_TEMP }}

      - name: Setup Git
        run: |
          git config --global user.email "rob.emmerson@gmail.com"
          git config --global user.name "Rob Emmerson"
      
      - name: Commit and Push
        run: |
          echo "GitBranchHash is set to: ${{needs.download.outputs.GitBranchHash}}"
          if [ ! -z ${GitBranchHash+x} ]; then git checkout -b update-${{needs.download.outputs.GitBranchHash}} && git add -A && git commit -m 'Automatic Update' && git push -u origin update-${{needs.download.outputs.GitBranchHash}} else echo "No update required"; fi
