name: Update Dependencies

on: workflow_dispatch

env:
  # Use docker.io for Docker Hub if empty
  NXLOG_FILE_DOWNLOAD: https://nxlog.co/system/files/products/files/348/nxlog-ce-3.0.2272.msi
  NXLOG_SAVE_LOCATION: nxlog.msi
  NXLOG_SAVE_LOCATION_TEMP: nxlog-tmp.msi
  SYSMON_FILE_DOWNLOAD: https://download.sysinternals.com/files/Sysmon.zip
  SYSMON_SAVE_LOCATION: sysmon.zip
  SYSMON_SAVE_LOCATION_TEMP: sysmon-tmp.zip
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  update:
    if: github.repository == 'robemmerson/mdr-supporting-files'
    name: Update
    runs-on: 'ubuntu-latest' # 'windows-latest' # [self-hosted, linux]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Check for NxLog Update
        id: nxlog
        run: |
          wget ${{ env.NXLOG_FILE_DOWNLOAD }} -O ${{ env.NXLOG_SAVE_LOCATION_TEMP }}
          echo 'tester'>${{ env.NXLOG_SAVE_LOCATION_TEMP }}
          NxLogExisting=$(md5sum ${{ env.NXLOG_SAVE_LOCATION }} | cut -f1 -d' ')
          NxLogNew=$(md5sum ${{ env.NXLOG_SAVE_LOCATION_TEMP }} | cut -f1 -d' ')
          echo "NxLogExisting is set to: $NxLogExisting"
          echo "NxLogNew is set to: $NxLogNew"
          if [[ ! $NxLogExisting = $NxLogNew ]]; then echo "Updating NxLog"; mv ${{ env.NXLOG_SAVE_LOCATION_TEMP }} ${{ env.NXLOG_SAVE_LOCATION }}; export GitBranchHash=${NxLogNew:0:8}; echo "::set-env name=GitBranchHash::$GitBranchHash"; else echo "No update, removing temporary file"; rm -f ${{ env.NXLOG_SAVE_LOCATION_TEMP }}; fi

      - name: Check for Sysmon Update
        run: |
          wget ${{ env.SYSMON_FILE_DOWNLOAD }} -O ${{ env.SYSMON_SAVE_LOCATION_TEMP }}
          SysmonExisting=$(md5sum ${{ env.SYSMON_SAVE_LOCATION }} | cut -f1 -d' ')
          SysmonNew=$(md5sum ${{ env.SYSMON_SAVE_LOCATION_TEMP }} | cut -f1 -d' ')
          echo "SysmonExisting is set to: $SysmonExisting"
          echo "SysmonNew is set to: $SysmonNew"
          if [[ ! $SysmonExisting = $SysmonNew ]]; then echo "Updating Sysmon"; mv ${{ env.SYSMON_SAVE_LOCATION_TEMP }} ${{ env.SYSMON_SAVE_LOCATION }}; export GitBranchHash=${SysmonNew:0:8}; echo "::set-env name=GitBranchHash::$GitBranchHash"; else echo "No update, removing temporary file"; rm -f ${{ env.SYSMON_SAVE_LOCATION_TEMP }}; fi

      - name: Setup Git
        run: |
          git config --global user.email "rob.emmerson@gmail.com"
          git config --global user.name "Rob Emmerson"
      
      - name: Commit and Push
        if: env.GitBranchHash != ''
        run: |
          echo "GitBranchHash is set to: $GitBranchHash"
          if [ ! -z ${GitBranchHash+x} ]; then git checkout -b update-$GitBranchHash && git add -A && git commit -m 'Automatic Update' && git push -u origin update-$GitBranchHash; else echo "No update required"; fi
          
      - name: Create Pull Request
        if: env.GitBranchHash != ''
        run: |
          # TODO: `-f` in curl won't fail on all non-200 HTTP responses.
          # Instead, add a `make` command with some bash scripting in order to do this.
          curl \
          -f -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/robemmerson/mdr-supporting-files/pulls \
          -d '{"base":"main","head":"update-${{ env.GitBranchHash }}","title":"Merge update into main","body":"Created automatically with a Github action."}' \

